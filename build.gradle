plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.company'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}


apply plugin: 'com.palantir.docker'

group = 'myorg'

bootJar {
	baseName = 'myapp'
	version =  '0.1.0'
}

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}
docker {
	name "${project.group}/${bootJar.baseName}"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}


//docker {
//	name "my-spring-boot-app:${version}"
//	files tasks.bootJar.outputs
//	buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
//}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
//	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.postgresql:postgresql:42.5.4'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


	implementation 'org.springframework.boot:spring-boot-starter-mail'

	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.1.0'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
	implementation group: 'org.springframework.plugin', name: 'spring-plugin-core', version: '2.0.0.RELEASE'

	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
}

//tasks.named('test') {
//	useJUnitPlatform()
//}
